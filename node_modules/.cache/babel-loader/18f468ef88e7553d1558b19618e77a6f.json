{"ast":null,"code":"export var maskCpf=function maskCpf(value){return value.replace(/\\D/g,'')// substitui qualquer caracter que nao seja numero por nada\n.replace(/(\\d{3})(\\d)/,'$1.$2')// captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\n.replace(/(\\d{3})(\\d)/,'$1.$2').replace(/(\\d{3})(\\d{1,2})/,'$1-$2').replace(/(-\\d{2})\\d+?$/,'$1');// captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n};export var maskPhone=function maskPhone(value){return value.replace(/\\D/g,'')//apenas numeros 0-9\n.replace(/(\\d{2})(\\d)/,'($1) $2').replace(/(\\d{5})(\\d)/,'$1-$2').replace(/(-\\d{4})\\d+?$/,'$1');// captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n};export var maskPhone13=function maskPhone13(value){return value.replace(/\\D/g,'')//apenas numeros 0-9\n.replace(/(\\d{2})(\\d{2})(\\d)/,'$1 ($2) $3').replace(/(\\d{5})(\\d)/,'$1-$2').replace(/(-\\d{4})\\d+?$/,'$1');// captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n};export var maskHour=function maskHour(value){return value.replace(/\\D/g,'')//apenas numeros 0-9\n.replace(/(\\d{2})(\\d)/,'$1:$2').replace(/(:\\d{2})\\d+?$/,'$1');};export var maskInteger=function maskInteger(value){return value.replace(/\\D/g,'');//apenas numeros 0-9\n};","map":{"version":3,"sources":["/Users/kaique/Desktop/REACT-JS/EYOU_SITE/src/Components/Form/Input/Mask.js"],"names":["maskCpf","value","replace","maskPhone","maskPhone13","maskHour","maskInteger"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,CAAI,CAC5B,MAAOA,CAAAA,KAAK,CACTC,OADI,CACI,KADJ,CACW,EADX,CACe;AADf,CAEJA,OAFI,CAEI,aAFJ,CAEmB,OAFnB,CAE4B;AAF5B,CAGJA,OAHI,CAGI,aAHJ,CAGmB,OAHnB,EAIJA,OAJI,CAII,kBAJJ,CAIwB,OAJxB,EAKJA,OALI,CAKI,eALJ,CAKqB,IALrB,CAAP,CAKkC;AACrC,CAPM,CASP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAF,KAAK,CAAI,CAChC,MAAOA,CAAAA,KAAK,CACTC,OADI,CACI,KADJ,CACW,EADX,CACe;AADf,CAEJA,OAFI,CAEI,aAFJ,CAEmB,SAFnB,EAGJA,OAHI,CAGI,aAHJ,CAGmB,OAHnB,EAIJA,OAJI,CAII,eAJJ,CAIqB,IAJrB,CAAP,CAIkC;AACnC,CANM,CAQP,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAH,KAAK,CAAI,CAClC,MAAOA,CAAAA,KAAK,CACTC,OADI,CACI,KADJ,CACW,EADX,CACe;AADf,CAEJA,OAFI,CAEI,oBAFJ,CAE0B,YAF1B,EAGJA,OAHI,CAGI,aAHJ,CAGmB,OAHnB,EAIJA,OAJI,CAII,eAJJ,CAIqB,IAJrB,CAAP,CAIkC;AACnC,CANM,CAQP,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAJ,KAAK,CAAI,CAC/B,MAAOA,CAAAA,KAAK,CACTC,OADI,CACI,KADJ,CACW,EADX,CACe;AADf,CAEJA,OAFI,CAEI,aAFJ,CAEmB,OAFnB,EAGJA,OAHI,CAGI,eAHJ,CAGqB,IAHrB,CAAP,CAID,CALM,CAOP,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAL,KAAK,CAAI,CAClC,MAAOA,CAAAA,KAAK,CACTC,OADI,CACI,KADJ,CACW,EADX,CAAP,CACsB;AACvB,CAHM","sourcesContent":["export const maskCpf = value => {\n    return value\n      .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\n      .replace(/(\\d{3})(\\d)/, '$1.$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\n      .replace(/(\\d{3})(\\d)/, '$1.$2')\n      .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n      .replace(/(-\\d{2})\\d+?$/, '$1') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n}\n\nexport const maskPhone = value => {\n  return value\n    .replace(/\\D/g, '') //apenas numeros 0-9\n    .replace(/(\\d{2})(\\d)/, '($1) $2')\n    .replace(/(\\d{5})(\\d)/, '$1-$2')\n    .replace(/(-\\d{4})\\d+?$/, '$1') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n}\n\nexport const maskPhone13 = value => {\n  return value\n    .replace(/\\D/g, '') //apenas numeros 0-9\n    .replace(/(\\d{2})(\\d{2})(\\d)/, '$1 ($2) $3')\n    .replace(/(\\d{5})(\\d)/, '$1-$2')\n    .replace(/(-\\d{4})\\d+?$/, '$1') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n}\n\nexport const maskHour = value => {\n  return value\n    .replace(/\\D/g, '') //apenas numeros 0-9\n    .replace(/(\\d{2})(\\d)/, '$1:$2')\n    .replace(/(:\\d{2})\\d+?$/, '$1')\n}\n\nexport const maskInteger = value => {\n  return value\n    .replace(/\\D/g, '') //apenas numeros 0-9\n}"]},"metadata":{},"sourceType":"module"}